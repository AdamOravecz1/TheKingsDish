[gd_scene load_steps=8 format=3 uid="uid://c3o70s02700qr"]

[ext_resource type="PackedScene" uid="uid://chkskxeyqmsql" path="res://inventory/gen_inv.tscn" id="1_8lv3c"]
[ext_resource type="Texture2D" uid="uid://burutfkmbdmk1" path="res://Sprites/FisherShopUI.png" id="2_nxckm"]
[ext_resource type="Theme" uid="uid://dsmecbmxtrduq" path="res://anvil_button.tres" id="4_t4l0c"]
[ext_resource type="Texture2D" uid="uid://bxxyeyfs4kfrw" path="res://Sprites/RecipeIcon.png" id="5_h071w"]
[ext_resource type="FontFile" uid="uid://cpojoq47dln4s" path="res://Fonts/PixelOperator.ttf" id="6_s251q"]
[ext_resource type="Texture2D" uid="uid://nmfgafxv8cl4" path="res://Sprites/CoinIcon.png" id="7_j1dv8"]

[sub_resource type="GDScript" id="GDScript_8wkjf"]
script/source = "extends gen_shop

@onready var player = get_tree().get_first_node_in_group(\"Player\")
@onready var recipes = get_tree().get_first_node_in_group(\"Recipes\")
		
func add_recipe_to_found(recipe_key: Resource) -> void:
	# Check if the recipe exists in the 'recipes' dictionary
	if not Global.recipes.has(recipe_key):
		print(\"⚠️ Recipe not found:\", recipe_key)
		return
	
	var ingredients = Global.recipes[recipe_key]
	var ingredient_paths: Array = []

	# Loop through the ingredients and extract their texture paths
	for ingredient in ingredients:
		if ingredient.has_method(\"get\"):
			var texture: Texture2D = ingredient.get(\"texture\")
			if texture and texture.resource_path != \"\":
				ingredient_paths.append(texture.resource_path)
			else:
				print(\"⚠️ No valid texture found for ingredient:\", ingredient)
		else:
			print(\"⚠️ Ingredient does not have 'texture' property:\", ingredient)

	# Add the recipe icon and ingredient texture paths to 'found_recipes'
	if recipe_key.has_method(\"get\"):
		var recipe_icon: Texture2D = recipe_key.get(\"texture\")
		if recipe_icon and recipe_icon.resource_path != \"\":
			Global.found_recipes[recipe_icon.resource_path] = ingredient_paths
			print(\"✅ Added recipe:\", recipe_icon.resource_path, \"with ingredients:\", ingredient_paths)
		else:
			print(\"⚠️ Recipe has no valid texture:\", recipe_key)


func _on_recipe_pressed():
	print(Global.found_recipes)
	add_recipe_to_found(preload(\"res://inventory/Items/rabbit, with pumpkin.tres\"))
	recipes.setup()
	print(Global.found_recipes)
	
"

[node name="FisherShop_UI" instance=ExtResource("1_8lv3c")]
script = SubResource("GDScript_8wkjf")

[node name="NinePatchRect" parent="." index="0"]
offset_left = 665.0
offset_top = 169.0
offset_right = 715.0
offset_bottom = 209.0
scale = Vector2(6, 6)
texture = ExtResource("2_nxckm")

[node name="GridContainer" parent="NinePatchRect" index="0"]
offset_left = 19.1667
offset_top = 9.16667
offset_right = 59.1667
offset_bottom = 58.1667
scale = Vector2(0.25, 0.25)

[node name="Recipe" type="Button" parent="NinePatchRect/GridContainer" index="0"]
layout_mode = 2
theme = ExtResource("4_t4l0c")
icon = ExtResource("5_h071w")

[node name="RecipeLabel" type="Label" parent="NinePatchRect/GridContainer" index="1"]
layout_mode = 2
theme_override_fonts/font = ExtResource("6_s251q")
theme_override_font_sizes/font_size = 8
text = "  000"

[node name="CoinIcon" type="Sprite2D" parent="." index="1"]
position = Vector2(784, 290)
texture = ExtResource("7_j1dv8")

[node name="Label" parent="." index="4"]
offset_left = 0.0
offset_top = 0.0
offset_right = 168.0
offset_bottom = 23.0

[connection signal="pressed" from="NinePatchRect/GridContainer/Recipe" to="." method="_on_recipe_pressed"]
